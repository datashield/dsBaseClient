% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ds.cbind.R
\name{ds.cbind}
\alias{ds.cbind}
\title{Combines objects by columns}
\usage{
ds.cbind(x = NULL, newobj = "newCbindObject", datasources = NULL)
}
\arguments{
\item{x}{a character vector, the name of the vector and or table to combine by column.}

\item{newobj}{the name of the output object. If this argument is set to \code{NULL}, 
the name of the new object is 'newCbindObject'.}

\item{datasources}{a list of opal object(s) obtained after login in to opal servers;
these objects hold also the data assign to R, as \code{dataframe}, from opal datasources.}
}
\value{
nothing is returned to the client, the new object is stored on the server side.
}
\description{
This is similar to the R base function \code{cbind} with the only differences 
that  it allows to combine up to 5 objects (vectors and/or table structures).
}
\details{
see details of the R base function \code{cbind}.
}
\examples{
{

  # load the file that contains the login details
  data(logindata)
  library(opal)

  # login and assign specific variables(s)
  # (by default the assigned dataset is a dataframe named 'D')
  myvar <- list('LAB_TSC', 'LAB_HDL')
  opals <- datashield.login(logins=logindata,assign=TRUE,variables=myvar)

  # generate a new dataframe by combining the log values of 
  # 'LAB_TSC' and 'LAB_HDL', by columns
  ds.assign(toAssign='log(D$LAB_TSC)', newobj='labtsc')
  ds.assign(toAssign='log(D$LAB_HDL)', newobj='labhdl')
  ds.cbind(x=c('labtsc','labhdl'), newobj="myDataframe")

  # clear the Datashield R sessions and logout
  datashield.logout(opals)

}

}
\author{
Gaye, A.
}
\seealso{
\link{ds.dataframe} to generate a table of type dataframe.

\link{ds.changeRefGroup} to change the reference level of a factor.

\link{ds.colnames} to obtain the column names of a matrix or a data frame

\link{ds.asMatrix} to coerce an object into a matrix type.

\link{ds.dim} to obtain the dimensions of matrix or a data frame.
}

