% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ds.cov.R
\name{ds.cov}
\alias{ds.cov}
\title{Calculates the covariance between any two variables}
\usage{
ds.cov(
  x = NULL,
  y = NULL,
  naAction = "pairwise.complete",
  type = "split",
  datasources = NULL
)
}
\arguments{
\item{x}{a character, the name of a vector, matrix or dataframe of variable(s) for which the
covariance(s) is (are) calculated for.}

\item{y}{NULL (default) or the name of a vector, matrix or dataframe with compatible
dimensions to x.}

\item{naAction}{a character string giving a method for computing covariances in the
presence of missing values. This must be one of the strings "casewise.complete" or
"pairwise.complete". If \code{use} is set to 'casewise.complete', then the function omits all the rows
in the whole dataframe that include at least one cell with a missing value before the calculation of covariances.
If \code{use} is set to 'pairwise.complete' (default), then the function divides the input dataframe to subset
subset dataframes formed by each pair between two variables (all combinations are considered) and omits the rows
with missing values at each pair separately and then calculates the covariances of those pairs.}

\item{type}{a character which represents the type of analysis to carry out. If \code{type} is
set to 'split' (default), the covariance of two variables or the variance-covariance matrix of
an input dataframe and the number of complete cases and missing values are returned for each
single study. If \code{type} is set to 'combine', the pooled covariance, the total number of
complete cases and the total number of missing values aggregated from all the involved studies,
are returned.}

\item{datasources}{a list of \code{\link{DSConnection-class}} objects obtained after login. If the <datasources>
the default set of connections will be used: see \link{datashield.connections_default}.}
}
\value{
a list containing the number of missing values in each variable, the number of missing variables
casewise or paiwise depending on the argument \code{use}, the covariance matrix, the number of used complete cases
and an error message which indicates whether or not the input variables pass the disclosure control (i.e. none of them
is dichotomous with a level having less counts than the pre-specified threshold). If any of the input variables does not
pass the disclosure control then all the output values are replaced with NAs. If all the variables are valid and pass
the control, then the output matrices are returned and also an error message is returned but it is replaced by NA.
}
\description{
This function calculates the covariance of two variables or the variance-covariance
matrix for the variables of an input dataframe
}
\details{
In addition to computing covariances; this function, produces a table outlining the
number of complete cases and a table outlining the number of missing values to allow for the
user to make a decision about the 'relevance' of the covariance based on the number of complete
cases included in the covariance calculations.
}
\examples{
\dontrun{

#  # load that contains the login details
#  data(glmLoginData)
#  library(DSI)
#
#  # login and assign specific variable(s)
#  # (by default the assigned dataset is a dataframe named 'D')
#  myvar <- list('LAB_HDL', 'LAB_TSC', 'LAB_GLUC_ADJUSTED', 'GENDER')
#  conns <- datashield.login(logins=glmLoginData, assign=TRUE, variables=myvar)
#
#  # Example 1: generate the covariance matrix for the assigned dataset 'D'
#  # which contains 4 vectors (3 continuous and 1 categorical)
#  ds.cov(x='D')
#
#  # Example 2: generate the covariance matrix for the dataset 'D' combined for all
#  # studies and removing any missing values casewise
#  ds.cov(x='D', naAction='casewise.complete', type='combine')
#
#  # Example 3: calculate the covariance between two vectors
#  # (first assign the vectors from 'D')
#  ds.assign(newobj='labhdl', toAssign='D$LAB_HDL')
#  ds.assign(newobj='labtsc', toAssign='D$LAB_TSC')
#  ds.assign(newobj='gender', toAssign='D$GENDER')
#  ds.cov(x='labhdl', y='labtsc', naAction='pairwise.complete', type='combine')
#  ds.cov(x='labhdl', y='labtsc', naAction='casewise.complete', type='combine')
#  ds.cov(x='labhdl', y='gender', naAction='pairwise.complete', type='combine')
#  ds.cov(x='labhdl', y='gender', naAction='casewise.complete', type='combine')
#
#  # clear the Datashield R sessions and logout
#  DSI::datashield.logout(conns)

}

}
\author{
Gaye A; Avraam D; Burton PR
}
