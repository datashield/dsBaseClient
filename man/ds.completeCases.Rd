% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ds.completeCases.R
\name{ds.completeCases}
\alias{ds.completeCases}
\title{ds.completeCases calling assign function completeCasesDS}
\usage{
ds.completeCases(x1 = NULL, newobj = NULL, datasources = NULL)
}
\arguments{
\item{x1}{This argument determines the input data.frame, matrix or vector
from which rows with NAs are to be stripped. x1 is specified via
a character string (in inverted commas) denoting the name of the input
object}

\item{newobj}{A character string specifying the name of the output object
to be written to the serverside which will be in the form of a modified
version of the input data object (data.frame, matrix or vector). The only
change is that any rows containing at least one NA will have been stripped.
If no <newobj> argument is specified, the output object name defaults to
<x1>_complete.cases.}

\item{datasources}{specifies the particular opal object(s) to use. If the <datasources>
argument is not specified the default set of opals will be used. The default opals
are called default.opals and the default can be set using the function
{ds.setDefaultOpals.o}. If the <datasources> is to be specified, it should be set without
inverted commas: e.g. datasources=opals.em or datasources=default.opals. If you wish to
apply the function solely to e.g. the second opal server in a set of three,
the argument can be specified as: e.g. datasources=opals.em[2].
If you wish to specify the first and third opal servers in a set you specify:
e.g. datasources=opals.em[c(1,3)].}
}
\value{
a modified data.frame, matrix or vector from which
all rows containing at least one NA have been deleted. This
modified object is written to the serverside in each source.
In addition, two validity messages are returned
indicating whether <newobj> has been created in each data source and if so whether
it is in a valid form. If its form is not valid in at least one study - e.g. because
a disclosure trap was tripped and creation of the full output object was blocked -
ds.completeCases also returns any studysideMessages that can help
explain the error in creating
the full output object. As well as appearing on the screen at run time,if you wish to
see the relevant studysideMessages at a later date you can use the {ds.message}
function. If you type ds.message("newobj") it will print out the relevant
studysideMessage from any datasource in which there was an error in creating <newobj>
and a studysideMessage was saved. If there was no error and <newobj> was created
without problems no studysideMessage will have been saved and ds.message("newobj")
will return the message: "ALL OK: there are no studysideMessage(s) on this datasource".
}
\description{
Identifies and strips out all rows of a data.frame,
matrix or vector that contain NAs.
}
\details{
In the case of a data.frame or matrix, {ds.completeCases} identifies
all rows containing one or more NAs and deletes those
rows altogether. Any one variable with NA in a given row will lead
to deletion of the whole row. In the case of a vector, {ds.completeCases}
acts in an equivalent manner but there is no equivalent to a 'row'
and so it simply strips out all observations recorded as NA.
{ds.completeCASES} is analogous to the {complete.cases} function
in native R. Limited additional information can therefore be found
under help("complete.cases") in native R.
}
\author{
Paul Burton for DataSHIELD Development Team, 17/10/2019
}
